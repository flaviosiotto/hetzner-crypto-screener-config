---
version: '3.9'
services:
  freqtrade-webui:
    image: freqtradeorg/freqtrade:stable
    # image: freqtradeorg/freqtrade:develop
    # Use plotting image
    # image: freqtradeorg/freqtrade:develop_plot
    # Build step - only needed when additional dependencies are needed
    # build:
    #   context: .
    #   dockerfile: "./docker/Dockerfile.custom"
    restart: unless-stopped
    volumes:
      - "/root/freqtrade-strategy/user_data:/freqtrade/user_data"
    # Expose api on port 8080 (localhost only)
    # Please read the https://www.freqtrade.io/en/stable/rest-api/ documentation
    # before enabling this.
    ports:
      - "8080:8080"
    # Default command used when running `docker compose up`
    command: >
      webserver
      --logfile /freqtrade/user_data/logs/freqtrade-webserver.log
      --config /freqtrade/user_data/config_binance.json
    deploy:
      placement:
        constraints: [node.hostname == docker-ce-ubuntu-dev02 ]

  freqtrade-touchema:
    image: freqtradeorg/freqtrade:stable
    # image: freqtradeorg/freqtrade:develop
    # Use plotting image
    # image: freqtradeorg/freqtrade:develop_plot
    # Build step - only needed when additional dependencies are needed
    # build:
    #   context: .
    #   dockerfile: "./docker/Dockerfile.custom"
    restart: unless-stopped
    volumes:
      - "/root/freqtrade-strategy/user_data:/freqtrade/user_data"
    # Expose api on port 8080 (localhost only)
    # Please read the https://www.freqtrade.io/en/stable/rest-api/ documentation
    # before enabling this.
    ports:
      - "8089:8080"
    # Default command used when running `docker compose up`
    secrets:
      - freqtrade-touchema-bot-secret
    command: >
      trade
      --logfile /freqtrade/user_data/logs/freqtrade.log
      --db-url sqlite:////freqtrade/user_data/tradesv3_TouchEmaStrategy.sqlite
      --config /freqtrade/user_data/config_binance.json
      --config /run/secrets/freqtrade-touchema-bot-secret
      --strategy TouchEmaStrategy
  breakout-touchema:
    image: freqtradeorg/freqtrade:stable
    # image: freqtradeorg/freqtrade:develop
    # Use plotting image
    # image: freqtradeorg/freqtrade:develop_plot
    # Build step - only needed when additional dependencies are needed
    # build:
    #   context: .
    #   dockerfile: "./docker/Dockerfile.custom"
    restart: unless-stopped
    volumes:
      - "/root/freqtrade-strategy/user_data:/freqtrade/user_data"
    # Expose api on port 8080 (localhost only)
    # Please read the https://www.freqtrade.io/en/stable/rest-api/ documentation
    # before enabling this.
    ports:
      - "8090:8080"
    # Default command used when running `docker compose up`
    secrets:
      - freqtrade-breakout-bot-secret
    command: >
      trade
      --logfile /freqtrade/user_data/logs/freqtrade_breakout.log
      --db-url sqlite:////freqtrade/user_data/tradesv3_BreakoutStrategy.sqlite
      --config /freqtrade/user_data/config_binance.json
      --config /run/secrets/freqtrade-breakout-bot-secret
      --strategy BreakoutStrategy
  fakeout-strategy:
    image: freqtradeorg/freqtrade:stable
    # image: freqtradeorg/freqtrade:develop
    # Use plotting image
    # image: freqtradeorg/freqtrade:develop_plot
    # Build step - only needed when additional dependencies are needed
    # build:
    #   context: .
    #   dockerfile: "./docker/Dockerfile.custom"
    restart: unless-stopped
    volumes:
      - "/root/freqtrade-strategy/user_data:/freqtrade/user_data"
    # Expose api on port 8080 (localhost only)
    # Please read the https://www.freqtrade.io/en/stable/rest-api/ documentation
    # before enabling this.
    ports:
      - "8091:8080"
    # Default command used when running `docker compose up`
    secrets:
      - freqtrade-fakeout-bot-secret
    command: >
      trade
      --logfile /freqtrade/user_data/logs/freqtrade_fakeout.log
      --db-url sqlite:////freqtrade/user_data/tradesv3_FakeoutStrategy.sqlite
      --config /freqtrade/user_data/config_binance.json
      --config /run/secrets/freqtrade-fakeout-bot-secret
      --strategy FakeoutStrategy
    deploy:
      placement:
        constraints: [node.hostname == docker-ce-ubuntu-dev02 ]
  fakeout-strategy-okx:
    image: freqtradeorg/freqtrade:stable
    # image: freqtradeorg/freqtrade:develop
    # Use plotting image
    # image: freqtradeorg/freqtrade:develop_plot
    # Build step - only needed when additional dependencies are needed
    # build:
    #   context: .
    #   dockerfile: "./docker/Dockerfile.custom"
    restart: unless-stopped
    volumes:
      - "/root/freqtrade-strategy/user_data:/freqtrade/user_data"
    # Expose api on port 8080 (localhost only)
    # Please read the https://www.freqtrade.io/en/stable/rest-api/ documentation
    # before enabling this.
    ports:
      - "8092:8080"
    # Default command used when running `docker compose up`
    secrets:
      - freqtrade-fakeout-okx-bot-secret
    command: >
      trade
      --logfile /freqtrade/user_data/logs/freqtrade_fakeout_okx.log
      --db-url sqlite:////freqtrade/user_data/tradesv3_FakeoutStrategy_OKX.sqlite
      --config /freqtrade/user_data/config_okx.json
      --config /run/secrets/freqtrade-fakeout-okx-bot-secret
      --strategy FakeoutStrategy
    deploy:
      placement:
        constraints: [node.hostname == docker-ce-ubuntu-dev02 ]
  freqai-strategy-okx:
    image: freqtradeorg/freqtrade:develop_freqai
    # image: freqtradeorg/freqtrade:develop
    # Use plotting image
    # image: freqtradeorg/freqtrade:develop_plot
    # Build step - only needed when additional dependencies are needed
    # build:
    #   context: .
    #   dockerfile: "./docker/Dockerfile.custom"
    restart: unless-stopped
    volumes:
      - "/root/freqtrade-strategy/user_data:/freqtrade/user_data"
    # Expose api on port 8080 (localhost only)
    # Please read the https://www.freqtrade.io/en/stable/rest-api/ documentation
    # before enabling this.
    ports:
      - "8096:8080"
    # Default command used when running `docker compose up`
    secrets:
      - freqtrade-ai-okx-bot-secret
    command: >
      trade
      --logfile /freqtrade/user_data/logs/freqtrade-ai-okx-bot-secret.log
      --db-url sqlite:////freqtrade/user_data/tradesv3_FreqaiExampleStrategy_OKX.sqlite
      --config /freqtrade/user_data/config_ai_okx.json
      --config /run/secrets/freqtrade-ai-okx-bot-secret
      --freqaimodel LightGBMRegressor
      --strategy FreqaiExampleStrategy
    deploy:
      placement:
        constraints: [node.hostname == docker-ce-ubuntu-dev02 ]

secrets:
  freqtrade-touchema-bot-secret:
    external: true
  freqtrade-breakout-bot-secret:
    external: true
  freqtrade-fakeout-bot-secret:
    external: true
  freqtrade-fakeout-okx-bot-secret:
    external: true
  freqtrade-ai-okx-bot-secret:
    external: True
